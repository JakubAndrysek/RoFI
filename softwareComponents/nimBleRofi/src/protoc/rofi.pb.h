/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.8 */

#ifndef PB_ROFI_PB_H_INCLUDED
#define PB_ROFI_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Enum definitions */
typedef enum _ConnectorPosition {
    ConnectorPosition_RETRACTED = 0,
    ConnectorPosition_EXTENDED = 1
} ConnectorPosition;

typedef enum _ConnectorOrientation {
    ConnectorOrientation_NORTH = 0,
    ConnectorOrientation_SOUTH = 1,
    ConnectorOrientation_EAST = 2,
    ConnectorOrientation_WEST = 3
} ConnectorOrientation;

typedef enum _ConnectorLine {
    ConnectorLine_INTERNAL = 0,
    ConnectorLine_EXTERNAL = 1
} ConnectorLine;

typedef enum _LidarDistanceMode {
    LidarDistanceMode_AUTONOMOUS = 0,
    LidarDistanceMode_SHORT = 1,
    LidarDistanceMode_LONG = 2
} LidarDistanceMode;

typedef enum _LidarStatus {
    LidarStatus_ERROR = 0,
    LidarStatus_NOT_MEASURED = 1,
    LidarStatus_OUTSIDE_RANGE = 2,
    LidarStatus_VALID = 3
} LidarStatus;

typedef enum _ConnectorEvent {
    ConnectorEvent_CONNECT = 0,
    ConnectorEvent_DISCONNECTED = 1,
    ConnectorEvent_POWER_CHANGED = 2
} ConnectorEvent;

typedef enum _DeviceCommandType {
    DeviceCommandType_REBOOT = 0,
    DeviceCommandType_SET_ID = 1,
    DeviceCommandType_SET_RANDOM_NUMBER = 2
} DeviceCommandType;

typedef enum _JointCommandType {
    JointCommandType_SET_JOINT_VELOCITY = 0,
    JointCommandType_SET_JOINT_POSITION = 1,
    JointCommandType_SET_JOINT_TORQUE = 2
} JointCommandType;

typedef enum _ConnectorCommandType {
    ConnectorCommandType_SET_POSITION = 0,
    ConnectorCommandType_CONNECT_POWER = 1,
    ConnectorCommandType_DISCONNECT_POWER = 2,
    ConnectorCommandType_SET_DISTANCE_MODE = 3
} ConnectorCommandType;

typedef enum _CommandTypeRequest {
    CommandTypeRequest_DEVICE = 0,
    CommandTypeRequest_JOINT = 1,
    CommandTypeRequest_CONNECTOR = 2
} CommandTypeRequest;

/* Struct definitions */
typedef struct _Empty {
    char dummy_field;
} Empty;

typedef struct _Descriptor {
    uint32_t count_joint;
    uint32_t count_connector;
} Descriptor;

typedef struct _Joint {
    float max_position;
    float min_position;
    float max_speed;
    float min_speed;
    float max_torque;
    float velocity;
    float position;
    float torque;
} Joint;

typedef struct _Connector {
    ConnectorPosition position;
    bool internal;
    bool external;
    LidarDistanceMode distance_mode;
    bool connected;
    ConnectorOrientation orientation;
    float internal_voltage;
    float internal_current;
    float external_voltage;
    float external_current;
    LidarStatus lidar_status;
    float distance;
} Connector;

typedef struct _RofiState {
    uint32_t packet_id;
    int32_t rofi_id;
    int32_t random_number;
    bool has_descriptor;
    Descriptor descriptor;
    pb_callback_t joints;
    pb_callback_t connectors;
} RofiState;

typedef struct _DeviceCommand {
    DeviceCommandType command;
    pb_size_t which_command_type;
    union {
        int32_t set_id;
        int32_t set_random_number;
    } command_type;
} DeviceCommand;

typedef struct _JointSetPosition {
    float position;
    float velocity;
} JointSetPosition;

typedef struct _JointCommand {
    uint32_t joint_id;
    JointCommandType command;
    pb_size_t which_command_type;
    union {
        float set_velocity;
        JointSetPosition set_position;
        float set_torque;
    } command_type;
} JointCommand;

typedef struct _ConnectorCommand {
    uint32_t connector_id;
    ConnectorCommandType command;
    pb_size_t which_command_type;
    union {
        ConnectorPosition set_position;
        ConnectorLine connect_power;
        ConnectorLine disconnect_power;
        LidarDistanceMode set_distance_mode;
    } command_type;
} ConnectorCommand;

/* Request is sent from the client to the RoFI */
typedef struct _RofiRequest {
    int32_t packet_id;
    int32_t rofi_id;
    CommandTypeRequest command;
    pb_size_t which_command_type;
    union {
        DeviceCommand device;
        JointCommand joint;
        ConnectorCommand connector;
    } command_type;
} RofiRequest;

/* Response is sent from the RoFI to the client */
typedef struct _RofiResponse {
    int32_t packet_id;
    int32_t rofi_id;
    int32_t success;
    pb_callback_t message;
} RofiResponse;


#ifdef __cplusplus
extern "C" {
#endif

/* Helper constants for enums */
#define _ConnectorPosition_MIN ConnectorPosition_RETRACTED
#define _ConnectorPosition_MAX ConnectorPosition_EXTENDED
#define _ConnectorPosition_ARRAYSIZE ((ConnectorPosition)(ConnectorPosition_EXTENDED+1))

#define _ConnectorOrientation_MIN ConnectorOrientation_NORTH
#define _ConnectorOrientation_MAX ConnectorOrientation_WEST
#define _ConnectorOrientation_ARRAYSIZE ((ConnectorOrientation)(ConnectorOrientation_WEST+1))

#define _ConnectorLine_MIN ConnectorLine_INTERNAL
#define _ConnectorLine_MAX ConnectorLine_EXTERNAL
#define _ConnectorLine_ARRAYSIZE ((ConnectorLine)(ConnectorLine_EXTERNAL+1))

#define _LidarDistanceMode_MIN LidarDistanceMode_AUTONOMOUS
#define _LidarDistanceMode_MAX LidarDistanceMode_LONG
#define _LidarDistanceMode_ARRAYSIZE ((LidarDistanceMode)(LidarDistanceMode_LONG+1))

#define _LidarStatus_MIN LidarStatus_ERROR
#define _LidarStatus_MAX LidarStatus_VALID
#define _LidarStatus_ARRAYSIZE ((LidarStatus)(LidarStatus_VALID+1))

#define _ConnectorEvent_MIN ConnectorEvent_CONNECT
#define _ConnectorEvent_MAX ConnectorEvent_POWER_CHANGED
#define _ConnectorEvent_ARRAYSIZE ((ConnectorEvent)(ConnectorEvent_POWER_CHANGED+1))

#define _DeviceCommandType_MIN DeviceCommandType_REBOOT
#define _DeviceCommandType_MAX DeviceCommandType_SET_RANDOM_NUMBER
#define _DeviceCommandType_ARRAYSIZE ((DeviceCommandType)(DeviceCommandType_SET_RANDOM_NUMBER+1))

#define _JointCommandType_MIN JointCommandType_SET_JOINT_VELOCITY
#define _JointCommandType_MAX JointCommandType_SET_JOINT_TORQUE
#define _JointCommandType_ARRAYSIZE ((JointCommandType)(JointCommandType_SET_JOINT_TORQUE+1))

#define _ConnectorCommandType_MIN ConnectorCommandType_SET_POSITION
#define _ConnectorCommandType_MAX ConnectorCommandType_SET_DISTANCE_MODE
#define _ConnectorCommandType_ARRAYSIZE ((ConnectorCommandType)(ConnectorCommandType_SET_DISTANCE_MODE+1))

#define _CommandTypeRequest_MIN CommandTypeRequest_DEVICE
#define _CommandTypeRequest_MAX CommandTypeRequest_CONNECTOR
#define _CommandTypeRequest_ARRAYSIZE ((CommandTypeRequest)(CommandTypeRequest_CONNECTOR+1))




#define Connector_position_ENUMTYPE ConnectorPosition
#define Connector_distance_mode_ENUMTYPE LidarDistanceMode
#define Connector_orientation_ENUMTYPE ConnectorOrientation
#define Connector_lidar_status_ENUMTYPE LidarStatus


#define DeviceCommand_command_ENUMTYPE DeviceCommandType


#define JointCommand_command_ENUMTYPE JointCommandType

#define ConnectorCommand_command_ENUMTYPE ConnectorCommandType
#define ConnectorCommand_command_type_set_position_ENUMTYPE ConnectorPosition
#define ConnectorCommand_command_type_connect_power_ENUMTYPE ConnectorLine
#define ConnectorCommand_command_type_disconnect_power_ENUMTYPE ConnectorLine
#define ConnectorCommand_command_type_set_distance_mode_ENUMTYPE LidarDistanceMode

#define RofiRequest_command_ENUMTYPE CommandTypeRequest



/* Initializer values for message structs */
#define Empty_init_default                       {0}
#define Descriptor_init_default                  {0, 0}
#define Joint_init_default                       {0, 0, 0, 0, 0, 0, 0, 0}
#define Connector_init_default                   {_ConnectorPosition_MIN, 0, 0, _LidarDistanceMode_MIN, 0, _ConnectorOrientation_MIN, 0, 0, 0, 0, _LidarStatus_MIN, 0}
#define RofiState_init_default                   {0, 0, 0, false, Descriptor_init_default, {{NULL}, NULL}, {{NULL}, NULL}}
#define DeviceCommand_init_default               {_DeviceCommandType_MIN, 0, {0}}
#define JointSetPosition_init_default            {0, 0}
#define JointCommand_init_default                {0, _JointCommandType_MIN, 0, {0}}
#define ConnectorCommand_init_default            {0, _ConnectorCommandType_MIN, 0, {_ConnectorPosition_MIN}}
#define RofiRequest_init_default                 {0, 0, _CommandTypeRequest_MIN, 0, {DeviceCommand_init_default}}
#define RofiResponse_init_default                {0, 0, 0, {{NULL}, NULL}}
#define Empty_init_zero                          {0}
#define Descriptor_init_zero                     {0, 0}
#define Joint_init_zero                          {0, 0, 0, 0, 0, 0, 0, 0}
#define Connector_init_zero                      {_ConnectorPosition_MIN, 0, 0, _LidarDistanceMode_MIN, 0, _ConnectorOrientation_MIN, 0, 0, 0, 0, _LidarStatus_MIN, 0}
#define RofiState_init_zero                      {0, 0, 0, false, Descriptor_init_zero, {{NULL}, NULL}, {{NULL}, NULL}}
#define DeviceCommand_init_zero                  {_DeviceCommandType_MIN, 0, {0}}
#define JointSetPosition_init_zero               {0, 0}
#define JointCommand_init_zero                   {0, _JointCommandType_MIN, 0, {0}}
#define ConnectorCommand_init_zero               {0, _ConnectorCommandType_MIN, 0, {_ConnectorPosition_MIN}}
#define RofiRequest_init_zero                    {0, 0, _CommandTypeRequest_MIN, 0, {DeviceCommand_init_zero}}
#define RofiResponse_init_zero                   {0, 0, 0, {{NULL}, NULL}}

/* Field tags (for use in manual encoding/decoding) */
#define Descriptor_count_joint_tag               1
#define Descriptor_count_connector_tag           2
#define Joint_max_position_tag                   1
#define Joint_min_position_tag                   2
#define Joint_max_speed_tag                      3
#define Joint_min_speed_tag                      4
#define Joint_max_torque_tag                     5
#define Joint_velocity_tag                       6
#define Joint_position_tag                       7
#define Joint_torque_tag                         8
#define Connector_position_tag                   1
#define Connector_internal_tag                   2
#define Connector_external_tag                   3
#define Connector_distance_mode_tag              4
#define Connector_connected_tag                  5
#define Connector_orientation_tag                6
#define Connector_internal_voltage_tag           7
#define Connector_internal_current_tag           8
#define Connector_external_voltage_tag           9
#define Connector_external_current_tag           10
#define Connector_lidar_status_tag               11
#define Connector_distance_tag                   12
#define RofiState_packet_id_tag                  1
#define RofiState_rofi_id_tag                    2
#define RofiState_random_number_tag              3
#define RofiState_descriptor_tag                 4
#define RofiState_joints_tag                     5
#define RofiState_connectors_tag                 6
#define DeviceCommand_command_tag                1
#define DeviceCommand_set_id_tag                 2
#define DeviceCommand_set_random_number_tag      3
#define JointSetPosition_position_tag            1
#define JointSetPosition_velocity_tag            2
#define JointCommand_joint_id_tag                1
#define JointCommand_command_tag                 2
#define JointCommand_set_velocity_tag            3
#define JointCommand_set_position_tag            4
#define JointCommand_set_torque_tag              5
#define ConnectorCommand_connector_id_tag        1
#define ConnectorCommand_command_tag             2
#define ConnectorCommand_set_position_tag        3
#define ConnectorCommand_connect_power_tag       4
#define ConnectorCommand_disconnect_power_tag    5
#define ConnectorCommand_set_distance_mode_tag   6
#define RofiRequest_packet_id_tag                1
#define RofiRequest_rofi_id_tag                  2
#define RofiRequest_command_tag                  3
#define RofiRequest_device_tag                   4
#define RofiRequest_joint_tag                    5
#define RofiRequest_connector_tag                6
#define RofiResponse_packet_id_tag               1
#define RofiResponse_rofi_id_tag                 2
#define RofiResponse_success_tag                 3
#define RofiResponse_message_tag                 4

/* Struct field encoding specification for nanopb */
#define Empty_FIELDLIST(X, a) \

#define Empty_CALLBACK NULL
#define Empty_DEFAULT NULL

#define Descriptor_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT32,   count_joint,       1) \
X(a, STATIC,   SINGULAR, UINT32,   count_connector,   2)
#define Descriptor_CALLBACK NULL
#define Descriptor_DEFAULT NULL

#define Joint_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, FLOAT,    max_position,      1) \
X(a, STATIC,   SINGULAR, FLOAT,    min_position,      2) \
X(a, STATIC,   SINGULAR, FLOAT,    max_speed,         3) \
X(a, STATIC,   SINGULAR, FLOAT,    min_speed,         4) \
X(a, STATIC,   SINGULAR, FLOAT,    max_torque,        5) \
X(a, STATIC,   SINGULAR, FLOAT,    velocity,          6) \
X(a, STATIC,   SINGULAR, FLOAT,    position,          7) \
X(a, STATIC,   SINGULAR, FLOAT,    torque,            8)
#define Joint_CALLBACK NULL
#define Joint_DEFAULT NULL

#define Connector_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UENUM,    position,          1) \
X(a, STATIC,   SINGULAR, BOOL,     internal,          2) \
X(a, STATIC,   SINGULAR, BOOL,     external,          3) \
X(a, STATIC,   SINGULAR, UENUM,    distance_mode,     4) \
X(a, STATIC,   SINGULAR, BOOL,     connected,         5) \
X(a, STATIC,   SINGULAR, UENUM,    orientation,       6) \
X(a, STATIC,   SINGULAR, FLOAT,    internal_voltage,   7) \
X(a, STATIC,   SINGULAR, FLOAT,    internal_current,   8) \
X(a, STATIC,   SINGULAR, FLOAT,    external_voltage,   9) \
X(a, STATIC,   SINGULAR, FLOAT,    external_current,  10) \
X(a, STATIC,   SINGULAR, UENUM,    lidar_status,     11) \
X(a, STATIC,   SINGULAR, FLOAT,    distance,         12)
#define Connector_CALLBACK NULL
#define Connector_DEFAULT NULL

#define RofiState_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT32,   packet_id,         1) \
X(a, STATIC,   SINGULAR, INT32,    rofi_id,           2) \
X(a, STATIC,   SINGULAR, INT32,    random_number,     3) \
X(a, STATIC,   OPTIONAL, MESSAGE,  descriptor,        4) \
X(a, CALLBACK, REPEATED, MESSAGE,  joints,            5) \
X(a, CALLBACK, REPEATED, MESSAGE,  connectors,        6)
#define RofiState_CALLBACK pb_default_field_callback
#define RofiState_DEFAULT NULL
#define RofiState_descriptor_MSGTYPE Descriptor
#define RofiState_joints_MSGTYPE Joint
#define RofiState_connectors_MSGTYPE Connector

#define DeviceCommand_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UENUM,    command,           1) \
X(a, STATIC,   ONEOF,    INT32,    (command_type,set_id,command_type.set_id),   2) \
X(a, STATIC,   ONEOF,    INT32,    (command_type,set_random_number,command_type.set_random_number),   3)
#define DeviceCommand_CALLBACK NULL
#define DeviceCommand_DEFAULT NULL

#define JointSetPosition_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, FLOAT,    position,          1) \
X(a, STATIC,   SINGULAR, FLOAT,    velocity,          2)
#define JointSetPosition_CALLBACK NULL
#define JointSetPosition_DEFAULT NULL

#define JointCommand_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT32,   joint_id,          1) \
X(a, STATIC,   SINGULAR, UENUM,    command,           2) \
X(a, STATIC,   ONEOF,    FLOAT,    (command_type,set_velocity,command_type.set_velocity),   3) \
X(a, STATIC,   ONEOF,    MESSAGE,  (command_type,set_position,command_type.set_position),   4) \
X(a, STATIC,   ONEOF,    FLOAT,    (command_type,set_torque,command_type.set_torque),   5)
#define JointCommand_CALLBACK NULL
#define JointCommand_DEFAULT NULL
#define JointCommand_command_type_set_position_MSGTYPE JointSetPosition

#define ConnectorCommand_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT32,   connector_id,      1) \
X(a, STATIC,   SINGULAR, UENUM,    command,           2) \
X(a, STATIC,   ONEOF,    UENUM,    (command_type,set_position,command_type.set_position),   3) \
X(a, STATIC,   ONEOF,    UENUM,    (command_type,connect_power,command_type.connect_power),   4) \
X(a, STATIC,   ONEOF,    UENUM,    (command_type,disconnect_power,command_type.disconnect_power),   5) \
X(a, STATIC,   ONEOF,    UENUM,    (command_type,set_distance_mode,command_type.set_distance_mode),   6)
#define ConnectorCommand_CALLBACK NULL
#define ConnectorCommand_DEFAULT NULL

#define RofiRequest_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, INT32,    packet_id,         1) \
X(a, STATIC,   SINGULAR, INT32,    rofi_id,           2) \
X(a, STATIC,   SINGULAR, UENUM,    command,           3) \
X(a, STATIC,   ONEOF,    MESSAGE,  (command_type,device,command_type.device),   4) \
X(a, STATIC,   ONEOF,    MESSAGE,  (command_type,joint,command_type.joint),   5) \
X(a, STATIC,   ONEOF,    MESSAGE,  (command_type,connector,command_type.connector),   6)
#define RofiRequest_CALLBACK NULL
#define RofiRequest_DEFAULT NULL
#define RofiRequest_command_type_device_MSGTYPE DeviceCommand
#define RofiRequest_command_type_joint_MSGTYPE JointCommand
#define RofiRequest_command_type_connector_MSGTYPE ConnectorCommand

#define RofiResponse_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, INT32,    packet_id,         1) \
X(a, STATIC,   SINGULAR, INT32,    rofi_id,           2) \
X(a, STATIC,   SINGULAR, INT32,    success,           3) \
X(a, CALLBACK, SINGULAR, STRING,   message,           4)
#define RofiResponse_CALLBACK pb_default_field_callback
#define RofiResponse_DEFAULT NULL

extern const pb_msgdesc_t Empty_msg;
extern const pb_msgdesc_t Descriptor_msg;
extern const pb_msgdesc_t Joint_msg;
extern const pb_msgdesc_t Connector_msg;
extern const pb_msgdesc_t RofiState_msg;
extern const pb_msgdesc_t DeviceCommand_msg;
extern const pb_msgdesc_t JointSetPosition_msg;
extern const pb_msgdesc_t JointCommand_msg;
extern const pb_msgdesc_t ConnectorCommand_msg;
extern const pb_msgdesc_t RofiRequest_msg;
extern const pb_msgdesc_t RofiResponse_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define Empty_fields &Empty_msg
#define Descriptor_fields &Descriptor_msg
#define Joint_fields &Joint_msg
#define Connector_fields &Connector_msg
#define RofiState_fields &RofiState_msg
#define DeviceCommand_fields &DeviceCommand_msg
#define JointSetPosition_fields &JointSetPosition_msg
#define JointCommand_fields &JointCommand_msg
#define ConnectorCommand_fields &ConnectorCommand_msg
#define RofiRequest_fields &RofiRequest_msg
#define RofiResponse_fields &RofiResponse_msg

/* Maximum encoded size of messages (where known) */
/* RofiState_size depends on runtime parameters */
/* RofiResponse_size depends on runtime parameters */
#define ConnectorCommand_size                    10
#define Connector_size                           39
#define Descriptor_size                          12
#define DeviceCommand_size                       13
#define Empty_size                               0
#define JointCommand_size                        20
#define JointSetPosition_size                    10
#define Joint_size                               40
#define ROFI_PB_H_MAX_SIZE                       RofiRequest_size
#define RofiRequest_size                         46

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
