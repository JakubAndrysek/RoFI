# Generated by the protocol buffer compiler.  DO NOT EDIT!
# sources: rofi.proto
# plugin: python-betterproto
from dataclasses import dataclass
from typing import List

import betterproto


class ConnectorPosition(betterproto.Enum):
    RETRACTED = 0
    EXTENDED = 1


class ConnectorOrientation(betterproto.Enum):
    NORTH = 0
    SOUTH = 1
    EAST = 2
    WEST = 3


class ConnectorLine(betterproto.Enum):
    INTERNAL = 0
    EXTERNAL = 1


class LidarDistanceMode(betterproto.Enum):
    AUTONOMOUS = 0
    SHORT = 1
    LONG = 2


class LidarStatus(betterproto.Enum):
    ERROR = 0
    NOT_MEASURED = 1
    OUTSIDE_RANGE = 2
    VALID = 3


class ConnectorEvent(betterproto.Enum):
    CONNECT = 0
    DISCONNECTED = 1
    POWER_CHANGED = 2


class DeviceCommandType(betterproto.Enum):
    REBOOT = 0
    SET_ID = 1
    SET_RANDOM_NUMBER = 2


class JointCommandType(betterproto.Enum):
    SET_JOINT_VELOCITY = 0
    SET_JOINT_POSITION = 1
    SET_JOINT_TORQUE = 2


class ConnectorCommandType(betterproto.Enum):
    SET_POSITION = 0
    CONNECT_POWER = 1
    DISCONNECT_POWER = 2
    SET_DISTANCE_MODE = 3


class CommandTypeRequest(betterproto.Enum):
    DEVICE = 0
    JOINT = 1
    CONNECTOR = 2


@dataclass
class Empty(betterproto.Message):
    pass


@dataclass
class Descriptor(betterproto.Message):
    count_joint: int = betterproto.uint32_field(1)
    count_connector: int = betterproto.uint32_field(2)


@dataclass
class Joint(betterproto.Message):
    max_position: float = betterproto.float_field(1)
    min_position: float = betterproto.float_field(2)
    max_speed: float = betterproto.float_field(3)
    min_speed: float = betterproto.float_field(4)
    max_torque: float = betterproto.float_field(5)
    velocity: float = betterproto.float_field(6)
    position: float = betterproto.float_field(7)
    torque: float = betterproto.float_field(8)


@dataclass
class Connector(betterproto.Message):
    position: "ConnectorPosition" = betterproto.enum_field(1)
    internal: bool = betterproto.bool_field(2)
    external: bool = betterproto.bool_field(3)
    distance_mode: "LidarDistanceMode" = betterproto.enum_field(4)
    connected: bool = betterproto.bool_field(5)
    orientation: "ConnectorOrientation" = betterproto.enum_field(6)
    internal_voltage: float = betterproto.float_field(7)
    internal_current: float = betterproto.float_field(8)
    external_voltage: float = betterproto.float_field(9)
    external_current: float = betterproto.float_field(10)
    lidar_status: "LidarStatus" = betterproto.enum_field(11)
    distance: float = betterproto.float_field(12)


@dataclass
class RofiState(betterproto.Message):
    packet_id: int = betterproto.uint32_field(1)
    rofi_id: int = betterproto.int32_field(2)
    random_number: int = betterproto.int32_field(3)
    descriptor: "Descriptor" = betterproto.message_field(4)
    joints: List["Joint"] = betterproto.message_field(5)
    connectors: List["Connector"] = betterproto.message_field(6)


@dataclass
class DeviceCommand(betterproto.Message):
    command: "DeviceCommandType" = betterproto.enum_field(1)
    set_id: int = betterproto.int32_field(2, group="command_type")
    set_random_number: int = betterproto.int32_field(3, group="command_type")


@dataclass
class JointSetPosition(betterproto.Message):
    position: float = betterproto.float_field(1)
    velocity: float = betterproto.float_field(2)


@dataclass
class JointCommand(betterproto.Message):
    joint_id: int = betterproto.uint32_field(1)
    command: "JointCommandType" = betterproto.enum_field(2)
    set_velocity: float = betterproto.float_field(3, group="command_type")
    set_position: "JointSetPosition" = betterproto.message_field(
        4, group="command_type"
    )
    set_torque: float = betterproto.float_field(5, group="command_type")


@dataclass
class ConnectorCommand(betterproto.Message):
    connector_id: int = betterproto.uint32_field(1)
    command: "ConnectorCommandType" = betterproto.enum_field(2)
    set_position: "ConnectorPosition" = betterproto.enum_field(3, group="command_type")
    connect_power: "ConnectorLine" = betterproto.enum_field(4, group="command_type")
    disconnect_power: "ConnectorLine" = betterproto.enum_field(5, group="command_type")
    set_distance_mode: "LidarDistanceMode" = betterproto.enum_field(
        6, group="command_type"
    )


@dataclass
class RofiRequest(betterproto.Message):
    """Request is sent from the client to the RoFI"""

    packet_id: int = betterproto.int32_field(1)
    rofi_id: int = betterproto.int32_field(2)
    command: "CommandTypeRequest" = betterproto.enum_field(3)
    device: "DeviceCommand" = betterproto.message_field(4, group="command_type")
    joint: "JointCommand" = betterproto.message_field(5, group="command_type")
    connector: "ConnectorCommand" = betterproto.message_field(6, group="command_type")


@dataclass
class RofiResponse(betterproto.Message):
    """Response is sent from the RoFI to the client"""

    packet_id: int = betterproto.int32_field(1)
    rofi_id: int = betterproto.int32_field(2)
    success: int = betterproto.int32_field(3)
    message: str = betterproto.string_field(4)
